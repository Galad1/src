syntax = "proto2";

service PickingBatch {
    rpc LoadPickingBatches(LoadPickingBatchesParameters) returns (stream PickingBatchSummary) {}

    rpc LoadPickingBatchDetails(LoadPickingBatchDetailsParameters) returns (PickingBatchDetails) {}
    
    rpc StartPickingBatch(StartPickingBatchParameters) returns (StartPickingBatchOutput) {}

    rpc ProcessPickingLine(ProcessPickingLineParameters) returns (Result) {}
}

message StartPickingBatchOutput {}

message LoadPickingBatchesParameters {
    required string UserID = 1;
    required string warehouse = 2;
    required bool ShowAll = 3;
}

message LoadPickingBatchDetailsParameters {
    required string PickingBatchId = 1;
}

message StartPickingBatchParameters {
    required string UserID = 1;
    required string PickingBatchId = 2;
}

message ProcessPickingLineParameters {
    required string PickingBatchId = 1;
    required string PickingLineId = 2;
    required string UserID = 3;
    required string Item = 4;
    required string Location = 5;
    required string Lot = 6;
    required uint32 Quantity = 7;
}

message PickingBatchSummary {
    required string PickingBatchId = 1;
    optional uint32 PickingBatchType = 2;
    optional string AssignedTo = 3;
    optional string Warehouse = 4;
    optional string Origin = 5;
    optional string ProductionOrder = 6;
    optional string SalesOrder = 7;
    optional uint32 PickingStatus = 8;
    optional string ShippingStatus = 9;
    optional string Customer = 10;
    optional string DeliveryAdress = 11;
    optional string PlannedDateFrom = 12;
    optional string PlannedDateTo = 13;
}

message PickingBatchDetails {
    required string PickingBatchId = 1;
    optional uint32 PickingBatchType = 2;
    optional string AssignedTo = 3;
    optional string Warehouse = 4;
    optional string Origin = 5;
    optional string ProductionOrder = 6;
    optional string SalesOrder = 7;
    optional uint32 PickingStatus = 8;
    optional string ShippingStatus = 9;
    optional string Customer = 10;
    optional string DeliveryAdress = 11;
    optional string PlannedDateFrom = 12;
    optional string PlannedDateTo = 13;
    repeated PickingBatchLine lines = 14;
}

message PickingBatchLine {
    required string LineId = 1;
    optional string Item = 2;
    optional string ItemDescription = 3;
    optional string Lot = 4;
    optional string Location = 5;
    optional uint32 Quantity = 6;
    optional string Unit = 7;
    optional uint32 Status = 8;
}

message Result {}